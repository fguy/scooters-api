// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/fguy/scooters-api/repositories/scooters (interfaces: Interface)

// Package mock_scooters is a generated GoMock package.
package mock_scooters

import (
	context "context"
	entities "github.com/fguy/scooters-api/entities"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockInterface is a mock of Interface interface
type MockInterface struct {
	ctrl     *gomock.Controller
	recorder *MockInterfaceMockRecorder
}

// MockInterfaceMockRecorder is the mock recorder for MockInterface
type MockInterfaceMockRecorder struct {
	mock *MockInterface
}

// NewMockInterface creates a new mock instance
func NewMockInterface(ctrl *gomock.Controller) *MockInterface {
	mock := &MockInterface{ctrl: ctrl}
	mock.recorder = &MockInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockInterface) EXPECT() *MockInterfaceMockRecorder {
	return m.recorder
}

// GetAvailable mocks base method
func (m *MockInterface) GetAvailable(arg0 context.Context, arg1, arg2, arg3 float32) ([]*entities.Scooter, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAvailable", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].([]*entities.Scooter)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAvailable indicates an expected call of GetAvailable
func (mr *MockInterfaceMockRecorder) GetAvailable(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAvailable", reflect.TypeOf((*MockInterface)(nil).GetAvailable), arg0, arg1, arg2, arg3)
}

// Reserve mocks base method
func (m *MockInterface) Reserve(arg0 context.Context, arg1 int32) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Reserve", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Reserve indicates an expected call of Reserve
func (mr *MockInterfaceMockRecorder) Reserve(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Reserve", reflect.TypeOf((*MockInterface)(nil).Reserve), arg0, arg1)
}
